{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/EnriqueSalazar/Desktop/Dapp-Enrique/fcctoken/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Component, ViewChild, ViewChildren } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(web3s) {\n    this.web3s = web3s;\n    this.title = 'Ejemplo Ethereum';\n    this.msgEstado = 'No Conectado.';\n    this.estado = false;\n    this.count = 0;\n    this.resultado = '';\n    this.points = 0;\n    this.totalRewardPoints = 0;\n    this.Suma = 0;\n    this.resta = 0;\n    this.blockHash = '';\n    this.blockNumber = '';\n    this.from = '';\n    this.transactionHash = '';\n    this.totalBalance = '';\n    this.amount = '';\n    this.rewardPoints = '';\n    this.exchangedRewardPoints = '';\n    this.balanceOf = '';\n    this.elementos = [];\n    this.elementosClient = [];\n    this.cabeceras = ['Transaction Hash', 'Block Number', 'Amount', 'Sended Reward Points', 'Total Reward Points', 'To'];\n    this.cabecerasClient = ['Transaction Hash', 'Block Number', 'Total Reward Points', 'Exchanged Reward Points', 'From']; //borrar\n\n    this.consultaSaldoForm = new FormGroup({\n      addressConsultaSaldo: new FormControl('')\n    }); //borrar\n    //borrar2\n\n    this.SumarNumeros = new FormGroup({\n      NumeroA: new FormControl(''),\n      NumeroB: new FormControl('')\n    }); //borrar2\n    //borrar3\n\n    this.TrasnsferenciaCuenta = new FormGroup({\n      cuentaA: new FormControl(''),\n      cuentaB: new FormControl(''),\n      cantidadT: new FormControl('')\n    }); //Borrar3\n    //borrar4\n\n    this.DivisionNumeros = new FormGroup({\n      NumeroA: new FormControl(''),\n      NumeroB: new FormControl('')\n    }); //Borrar4\n\n    this.sendPointsForm = new FormGroup({\n      accountAddress: new FormControl(''),\n      sellAmount: new FormControl('')\n    });\n    this.exchangedPointsForm = new FormGroup({\n      exchangePoints: new FormControl(''),\n      CuentaRetiro: new FormControl('')\n    });\n  }\n\n  ngAfterViewInit() {\n    this.conectar();\n    this.scrollContainer = this.scrollFrame.nativeElement; //this.elementos.changes.subscribe(() => this.onElementosChanged());   \n  }\n\n  onElementosChanged() {\n    this.scrollToBottom();\n  }\n\n  conectar() {\n    this.web3s.connectAccount().then(r => {\n      this.msgEstado = \"Conectado.\";\n      this.estado = true;\n      this.subscribeToEvents();\n    });\n  }\n\n  getTotalRewardPoints() {\n    this.web3s.contrato.methods.getTotalRewardPoints().call().then(response => {\n      this.totalRewardPoints = response;\n      console.log(`totalRewardPoints => ${response}`);\n    });\n  }\n\n  getRewardPoints() {\n    this.web3s.contrato.methods.getRewardPoints().call().then(response => {\n      this.getRewardPoints = response;\n      console.log(`getRewardPoints => ${response}`);\n    });\n  }\n\n  getExchangedRewardPoints() {\n    this.web3s.contrato.methods.getExchangedRewardPoints().call().then(response => {\n      this.getRewardPoints = response;\n      console.log(`getExchangedRewardPoints => ${response}`);\n    });\n  } //obtiene el balance de la billetera que ejecuta la simulacion de intercambio de puntos\n\n\n  getBalance() {\n    this.web3s.contrato.methods.balanceOf(this.web3s.accounts[0]).call().then(response => {\n      this.totalBalance = response;\n    });\n  }\n\n  getBalanceByAccount(accountAddress) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.web3s.contrato.methods.balanceOf(accountAddress).call();\n    })();\n  }\n\n  SumNum(A, B) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this2.web3s.contrato.methods.safeAdd(A, B).call();\n    })();\n  }\n\n  DivNum(A, B) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this3.web3s.contrato.methods.safeSub(A, B).call();\n    })();\n  }\n  /*async Transferir1(cuentaA: any, cuentaB: any, cantidadT: any ): Promise<any> {\r\n    return await this.web3s.contrato.methods.transferFrom(cuentaA, cuentaB, cantidadT);\r\n  }*/\n  // BOTONES\n  //borrar\n\n\n  checarBalance() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const addressDapp = (_a = _this4.consultaSaldoForm.get('addressConsultaSaldo')) === null || _a === void 0 ? void 0 : _a.value;\n      console.log(addressDapp);\n      const accountBalance = yield _this4.getBalanceByAccount(addressDapp);\n      console.log(`accountBalance => ${accountBalance}`);\n      _this4.balanceOf = accountBalance;\n    })();\n  } //borrar\n  //Borrar2\n\n\n  AdicionarTokens() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      const NumDapp = (_a = _this5.SumarNumeros.get('NumeroA')) === null || _a === void 0 ? void 0 : _a.value;\n      console.log(NumDapp);\n      const NumDapp2 = (_b = _this5.SumarNumeros.get('NumeroB')) === null || _b === void 0 ? void 0 : _b.value;\n      console.log(NumDapp2);\n      const SumaNumeros = yield _this5.SumNum(NumDapp, NumDapp2);\n      console.log(`SumaNumeros => ${SumaNumeros}`);\n      _this5.Suma = SumaNumeros;\n    })();\n  } //Borrar2\n  //Borrar3\n\n\n  Transferir() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c;\n\n      const CuentaA = (_a = _this6.TrasnsferenciaCuenta.get('cuentaA')) === null || _a === void 0 ? void 0 : _a.value;\n      const CuentaB = (_b = _this6.TrasnsferenciaCuenta.get('cuentaB')) === null || _b === void 0 ? void 0 : _b.value;\n      const CantidadT = (_c = _this6.TrasnsferenciaCuenta.get('cantidadT')) === null || _c === void 0 ? void 0 : _c.value;\n      console.log(CuentaA);\n      console.log(CuentaB);\n      console.log(CantidadT); //const accountBalance = await this.getBalanceByAccount(this.web3s.accounts[0]);\n      //console.log(`accountBalance => ${accountBalance}`);\n\n      _this6.web3s.contrato.methods.transferFrom(CuentaA, CuentaB, CantidadT).send({\n        from: _this6.web3s.accounts[0]\n      }).then(response => {\n        _this6.resultado = \"Transacción realizada!\";\n        _this6.blockHash = response.blockHash;\n        _this6.blockNumber = response.blockNumber;\n        _this6.from = response.from;\n        _this6.transactionHash = response.transactionHash;\n\n        _this6.getBalance();\n      }).catch(error => {\n        console.log(error);\n        _this6.resultado = \"Error en la transacción!\";\n      });\n    })();\n  } //Borrar3\n  //borrar4\n\n\n  RestarNumeros() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      const NumDapp = (_a = _this7.DivisionNumeros.get('NumeroA')) === null || _a === void 0 ? void 0 : _a.value;\n      const NumDapp2 = (_b = _this7.DivisionNumeros.get('NumeroB')) === null || _b === void 0 ? void 0 : _b.value;\n      const restaNumeros = yield _this7.DivNum(NumDapp, NumDapp2);\n      console.log(`DivideNumeros => ${restaNumeros}`);\n      _this7.resta = restaNumeros;\n    })();\n  } //borrar4\n\n\n  getAmount() {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c, _d;\n\n      _this8.borrar();\n\n      console.log(`accountAddress => ${(_a = _this8.sendPointsForm.get('accountAddress')) === null || _a === void 0 ? void 0 : _a.value}`);\n      console.log(`sellAmount => ${(_b = _this8.sendPointsForm.get('sellAmount')) === null || _b === void 0 ? void 0 : _b.value}`);\n      const accountAddress = (_c = _this8.sendPointsForm.get('accountAddress')) === null || _c === void 0 ? void 0 : _c.value;\n      const sellAmount = (_d = _this8.sendPointsForm.get('sellAmount')) === null || _d === void 0 ? void 0 : _d.value;\n      _this8.points = sellAmount; //* 0.1; //10%\n\n      const accountBalance = yield _this8.getBalanceByAccount(_this8.web3s.accounts[0]);\n      console.log(`accountBalance => ${accountBalance}`);\n      console.log(`points => ${_this8.points}`);\n\n      _this8.web3s.contrato.methods.sendPoints(accountAddress, sellAmount, _this8.points, accountBalance).send({\n        from: _this8.web3s.accounts[0]\n      }).then(response => {\n        _this8.resultado = \"Transacción realizada!\";\n        _this8.blockHash = response.blockHash;\n        _this8.blockNumber = response.blockNumber;\n        _this8.from = response.from;\n        _this8.transactionHash = response.transactionHash;\n      }).catch(error => {\n        console.log(error);\n        _this8.resultado = \"Error en la transacción!\";\n      });\n    })();\n  }\n\n  exchangePoints() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c;\n\n      _this9.borrar();\n\n      console.log(`exchangePoints => ${(_a = _this9.exchangedPointsForm.get('exchangePoints')) === null || _a === void 0 ? void 0 : _a.value}`);\n      const ownerAddress = '0x0690343CC2318849d2d800431DdC0708f891562b';\n      const CR = (_b = _this9.exchangedPointsForm.get('CuentaRetiro')) === null || _b === void 0 ? void 0 : _b.value;\n      const exchangePoints = (_c = _this9.exchangedPointsForm.get('exchangePoints')) === null || _c === void 0 ? void 0 : _c.value;\n      const accountBalance = yield _this9.getBalanceByAccount(_this9.web3s.accounts[0]);\n      _this9.totalBalance = accountBalance;\n      console.log(`accountBalance => ${accountBalance}`);\n\n      _this9.web3s.contrato.methods.exchangePoints(ownerAddress, exchangePoints, accountBalance).send({\n        from: _this9.web3s.accounts[0]\n      }).then(response => {\n        _this9.resultado = \"Transacción realizada!\";\n        _this9.blockHash = response.blockHash;\n        _this9.blockNumber = response.blockNumber;\n        _this9.from = response.from;\n        _this9.transactionHash = response.transactionHash;\n\n        _this9.getBalance();\n      }).catch(error => {\n        console.log(error);\n        _this9.resultado = \"Error en la transacción!\";\n      });\n    })();\n  }\n\n  borrar() {\n    this.resultado = \"\";\n    this.blockHash = \"\";\n    this.blockNumber = \"\";\n    this.from = \"\";\n    this.transactionHash = \"\";\n  }\n\n  subscribeToEvents() {\n    var _this10 = this;\n\n    // Subscribe to pending transactions\n    const self = this;\n    this.web3s.contrato.events.Transfer({\n      fromBlock: 0\n    }, (error, event) => {\n      if (!error) {\n        // setInterval(() => {\n        const abiDecoder = require('abi-decoder'); // NodeJS\n\n\n        abiDecoder.addABI(this.web3s.abi);\n        this.web3s.web3js.eth.getTransaction(event.transactionHash).then( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (data) {\n            const decodedData = abiDecoder.decodeMethod(data.input);\n\n            if (decodedData != undefined) {\n              //recuperando datos registrados al enviar puntos\n              //datos recuperados: amount, rewardPoints\n              if (decodedData.name == 'sendPoints') {\n                _this10.amount = decodedData.params[1].value;\n                _this10.rewardPoints = decodedData.params[2].value;\n                _this10.exchangedRewardPoints = '0';\n                _this10.totalRewardPoints = decodedData.params[3].value;\n\n                _this10.elementos.push({\n                  blockHash: event.blockHash,\n                  transactionHash: event.transactionHash,\n                  blockNumber: event.blockNumber,\n                  amount: _this10.amount,\n                  rewardPoints: _this10.rewardPoints,\n                  totalRewardPoints: _this10.totalRewardPoints,\n                  accountAddress: event.returnValues.to\n                });\n\n                _this10.elementos = _this10.elementos.sort((a, b) => parseInt(a.blockNumber) - parseInt(b.blockNumber)); //recuperando data de los puntos intercambiados\n                //datos recuperados: exchangedRewardPoints\n              } else if (decodedData.name == 'exchangePoints') {\n                _this10.exchangedRewardPoints = decodedData.params[1].value;\n                _this10.totalRewardPoints = decodedData.params[2].value;\n\n                _this10.elementosClient.push({\n                  blockHash: event.blockHash,\n                  transactionHash: event.transactionHash,\n                  blockNumber: event.blockNumber,\n                  exchangedRewardPoints: _this10.exchangedRewardPoints,\n                  totalRewardPoints: _this10.totalRewardPoints,\n                  accountAddress: event.returnValues.from\n                });\n\n                _this10.elementosClient = _this10.elementosClient.sort((a, b) => parseInt(a.blockNumber) - parseInt(b.blockNumber));\n              } else {}\n            }\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()); // }, 500);                                                                                                \n      }\n    });\n  }\n\n  scrollToBottom() {\n    this.scrollContainer.scroll({\n      top: this.scrollContainer.scrollHeight,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }\n\n};\n\n__decorate([ViewChild('scrollframe', {\n  static: false\n})], AppComponent.prototype, \"scrollFrame\", void 0);\n\n__decorate([ViewChildren('item')], AppComponent.prototype, \"itemElements\", void 0);\n\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  styles: []\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"sources":["C:\\Users\\EnriqueSalazar\\Desktop\\Dapp-Enrique\\fcctoken\\src\\app\\app.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { FormControl, FormGroup } from '@angular/forms';\r\nimport { Component, AfterViewInit, ElementRef, ViewChild,ViewChildren,QueryList} from '@angular/core';\r\nimport { Web3Service } from './services/web3.service';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements AfterViewInit {\r\n  @ViewChild('scrollframe',{static:false}) private scrollFrame!: ElementRef;\r\n  @ViewChildren('item') itemElements!: QueryList<any>;\r\n\r\n  private scrollContainer: any;\r\n\r\n  title = 'Ejemplo Ethereum';\r\n  msgEstado = 'No Conectado.';\r\n  estado = false;\r\n  count = 0;\r\n  resultado = '';\r\n  points = 0;\r\n  totalRewardPoints = 0;\r\n  Suma = 0;\r\n  resta=0;\r\n\r\n  blockHash = '';\r\n  blockNumber = '';\r\n  from = '';\r\n  transactionHash = '';\r\n  totalBalance = '';\r\n  amount = '';\r\n  rewardPoints = '';\r\n  exchangedRewardPoints = '';\r\n  balanceOf = '';\r\n\r\n  elementos: any = [];  \r\n  elementosClient: any = [];  \r\n\r\n  cabeceras = ['Transaction Hash', 'Block Number','Amount','Sended Reward Points','Total Reward Points','To'];\r\n  cabecerasClient = ['Transaction Hash', 'Block Number','Total Reward Points','Exchanged Reward Points','From'];\r\n\r\n  constructor(public web3s: Web3Service){}\r\n\r\n  //borrar\r\n  consultaSaldoForm = new FormGroup({\r\n    addressConsultaSaldo: new FormControl('')\r\n  });\r\n  //borrar\r\n\r\n\r\n  //borrar2\r\n  SumarNumeros = new FormGroup({\r\n    NumeroA: new FormControl(''),\r\n    NumeroB: new FormControl('')\r\n  })\r\n  //borrar2\r\n\r\n\r\n  //borrar3\r\n  TrasnsferenciaCuenta = new FormGroup({\r\n    cuentaA: new FormControl(''),\r\n    cuentaB: new FormControl(''),\r\n    cantidadT: new FormControl('')\r\n  })\r\n  //Borrar3\r\n\r\n\r\n\r\n  //borrar4\r\n  DivisionNumeros = new FormGroup({\r\n    NumeroA: new FormControl(''),\r\n    NumeroB: new FormControl('')\r\n   \r\n  })\r\n  //Borrar4\r\n\r\n  sendPointsForm = new FormGroup({\r\n    accountAddress: new FormControl(''),\r\n    sellAmount: new FormControl('')\r\n  });\r\n\r\n  exchangedPointsForm = new FormGroup({\r\n    exchangePoints: new FormControl(''),\r\n    CuentaRetiro: new FormControl('')\r\n  });\r\n\r\n  ngAfterViewInit(): void {\r\n    this.conectar();\r\n    this.scrollContainer = this.scrollFrame.nativeElement;      \r\n    //this.elementos.changes.subscribe(() => this.onElementosChanged());   \r\n  }\r\n\r\n  private onElementosChanged(): void {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  conectar():void {\r\n    this.web3s.connectAccount().then((r)=>{ \r\n      this.msgEstado = \"Conectado.\";\r\n      this.estado = true;\r\n      this.subscribeToEvents();\r\n    });\r\n  }\r\n\r\n  getTotalRewardPoints(): void {\r\n    this.web3s.contrato.methods.getTotalRewardPoints()\r\n    .call()\r\n    .then((response: any) => {\r\n      this.totalRewardPoints = response;\r\n      console.log(`totalRewardPoints => ${response}`);\r\n    });\r\n  }\r\n\r\n  getRewardPoints(): void {\r\n    this.web3s.contrato.methods.getRewardPoints()\r\n    .call()\r\n    .then((response: any) => {\r\n      this.getRewardPoints = response;\r\n      console.log(`getRewardPoints => ${response}`);\r\n    });\r\n  }\r\n\r\n  getExchangedRewardPoints(): void {\r\n    this.web3s.contrato.methods.getExchangedRewardPoints()\r\n    .call()\r\n    .then((response: any) => {\r\n      this.getRewardPoints = response;\r\n      console.log(`getExchangedRewardPoints => ${response}`);\r\n    });\r\n  }\r\n\r\n  //obtiene el balance de la billetera que ejecuta la simulacion de intercambio de puntos\r\n  getBalance(): void {\r\n    this.web3s.contrato.methods.balanceOf(this.web3s.accounts[0])\r\n    .call()\r\n    .then((response: any) => {\r\n      this.totalBalance = response;\r\n    });\r\n  }\r\n\r\n  async getBalanceByAccount(accountAddress: any): Promise<any> {\r\n    return await this.web3s.contrato.methods.balanceOf(accountAddress).call();\r\n  }\r\n\r\n  async SumNum(A: any, B: any ): Promise<any> {\r\n    return await this.web3s.contrato.methods.safeAdd(A, B).call();\r\n  }\r\n\r\n  async DivNum(A: any, B: any ): Promise<any> {\r\n    return await this.web3s.contrato.methods.safeSub(A, B).call();\r\n  }\r\n\r\n\r\n  /*async Transferir1(cuentaA: any, cuentaB: any, cantidadT: any ): Promise<any> {\r\n    return await this.web3s.contrato.methods.transferFrom(cuentaA, cuentaB, cantidadT);\r\n  }*/\r\n\r\n\r\n  // BOTONES\r\n\r\n  //borrar\r\n  async checarBalance(): Promise<void> {\r\n    const addressDapp =  this.consultaSaldoForm.get('addressConsultaSaldo')?.value;\r\n    console.log(addressDapp);\r\n    const accountBalance = await this.getBalanceByAccount(addressDapp);\r\n    console.log(`accountBalance => ${accountBalance}`);\r\n    this.balanceOf = accountBalance;\r\n  }\r\n  //borrar\r\n  \r\n\r\n  //Borrar2\r\n\r\n  async AdicionarTokens(): Promise<void>{\r\n    const NumDapp =  this.SumarNumeros.get('NumeroA')?.value;\r\n    console.log(NumDapp);\r\n    const NumDapp2 =  this.SumarNumeros.get('NumeroB')?.value;\r\n    console.log(NumDapp2);\r\n    const SumaNumeros = await this.SumNum(NumDapp, NumDapp2);\r\n    console.log(`SumaNumeros => ${SumaNumeros}`);\r\n    this.Suma = SumaNumeros;\r\n  }\r\n\r\n  //Borrar2\r\n\r\n\r\n  //Borrar3\r\n    async Transferir(): Promise<void> {\r\n    \r\n    const CuentaA = this.TrasnsferenciaCuenta.get('cuentaA')?.value;\r\n    const CuentaB = this.TrasnsferenciaCuenta.get('cuentaB')?.value;\r\n    const CantidadT =  this.TrasnsferenciaCuenta.get('cantidadT')?.value;\r\n    \r\n    \r\n    console.log(CuentaA);\r\n    console.log(CuentaB);\r\n    console.log(CantidadT);\r\n\r\n    //const accountBalance = await this.getBalanceByAccount(this.web3s.accounts[0]);\r\n    //console.log(`accountBalance => ${accountBalance}`);\r\n   \r\n    this.web3s.contrato.methods.transferFrom(CuentaA, CuentaB, CantidadT).send({from: this.web3s.accounts[0]})\r\n\r\n    .then((response:any) => {\r\n      this.resultado = \"Transacción realizada!\";\r\n      this.blockHash = response.blockHash;\r\n      this.blockNumber = response.blockNumber;\r\n      this.from = response.from;\r\n      this.transactionHash = response.transactionHash;\r\n      this.getBalance();\r\n   })\r\n   .catch((error: any) => {\r\n      console.log(error);\r\n      this.resultado = \"Error en la transacción!\";\r\n   });\r\n  }\r\n    \r\n\r\n  //Borrar3\r\n\r\n\r\n  //borrar4\r\n\r\n  async RestarNumeros(): Promise<void>{\r\n    const NumDapp =  this.DivisionNumeros.get('NumeroA')?.value;\r\n    const NumDapp2 =  this.DivisionNumeros.get('NumeroB')?.value;\r\n    const restaNumeros = await this.DivNum(NumDapp, NumDapp2);\r\n\r\n    console.log(`DivideNumeros => ${restaNumeros}`);\r\n    this.resta= restaNumeros;\r\n  }\r\n\r\n  //borrar4\r\n\r\n\r\n\r\n  async getAmount(): Promise<void> {\r\n    this.borrar();\r\n    console.log(`accountAddress => ${this.sendPointsForm.get('accountAddress')?.value}`);\r\n    console.log(`sellAmount => ${this.sendPointsForm.get('sellAmount')?.value}`);\r\n    const accountAddress = this.sendPointsForm.get('accountAddress')?.value;\r\n    const sellAmount = this.sendPointsForm.get('sellAmount')?.value;\r\n\r\n    this.points = sellAmount //* 0.1; //10%\r\n    const accountBalance = await this.getBalanceByAccount(this.web3s.accounts[0]);\r\n\r\n    console.log(`accountBalance => ${accountBalance}`);\r\n    console.log(`points => ${this.points}`);\r\n    this.web3s.contrato.methods.sendPoints(accountAddress, sellAmount, this.points, accountBalance).send({from: this.web3s.accounts[0]})\r\n    .then((response:any) => {\r\n      this.resultado = \"Transacción realizada!\";\r\n      this.blockHash = response.blockHash;\r\n      this.blockNumber = response.blockNumber;\r\n      this.from = response.from;\r\n      this.transactionHash = response.transactionHash;\r\n   })\r\n   .catch((error: any) => {\r\n      console.log(error);\r\n      this.resultado = \"Error en la transacción!\";\r\n   });\r\n  }\r\n\r\n  async exchangePoints(): Promise<void> {\r\n    this.borrar();\r\n\r\n    console.log(`exchangePoints => ${this.exchangedPointsForm.get('exchangePoints')?.value}`);\r\n    const ownerAddress = '0x0690343CC2318849d2d800431DdC0708f891562b';\r\n\r\n    const CR = this.exchangedPointsForm.get('CuentaRetiro')?.value;\r\n    const exchangePoints = this.exchangedPointsForm.get('exchangePoints')?.value;\r\n\r\n    const accountBalance = await this.getBalanceByAccount(this.web3s.accounts[0]);\r\n    this.totalBalance = accountBalance;\r\n    console.log(`accountBalance => ${accountBalance}`);\r\n\r\n    this.web3s.contrato.methods.exchangePoints(ownerAddress, exchangePoints, accountBalance).send({from: this.web3s.accounts[0]})\r\n    .then((response:any) => {\r\n      this.resultado = \"Transacción realizada!\";\r\n      this.blockHash = response.blockHash;\r\n      this.blockNumber = response.blockNumber;\r\n      this.from = response.from;\r\n      this.transactionHash = response.transactionHash;\r\n      this.getBalance();\r\n   })\r\n   .catch((error: any) => {\r\n      console.log(error);\r\n      this.resultado = \"Error en la transacción!\";\r\n   });\r\n  }\r\n\r\n  borrar(): void {\r\n    this.resultado = \"\";\r\n    this.blockHash = \"\";\r\n    this.blockNumber = \"\";\r\n    this.from = \"\";\r\n    this.transactionHash = \"\";\r\n  }\r\n  \r\n  subscribeToEvents() {\r\n    // Subscribe to pending transactions\r\n    const self = this;\r\n    this.web3s.contrato.events.Transfer({\r\n                                              fromBlock: 0\r\n                                            },\r\n                                            (error: any, event: any) => {\r\n                                              if (!error){\r\n                                                // setInterval(() => {\r\n\r\n                                                  const abiDecoder = require('abi-decoder'); // NodeJS\r\n                                                  abiDecoder.addABI(this.web3s.abi);\r\n                                                  \r\n                                                  this.web3s.web3js.eth.getTransaction(event.transactionHash).then(async (data: any) => {\r\n\r\n                                                    const decodedData = abiDecoder.decodeMethod(data.input);\r\n\r\n                                                    if(decodedData != undefined) {\r\n\r\n                                                      //recuperando datos registrados al enviar puntos\r\n                                                      //datos recuperados: amount, rewardPoints\r\n                                                      if(decodedData.name == 'sendPoints') {\r\n                                                        this.amount = decodedData.params[1].value\r\n                                                        this.rewardPoints = decodedData.params[2].value;\r\n                                                        this.exchangedRewardPoints = '0';\r\n                                                        this.totalRewardPoints = decodedData.params[3].value;\r\n\r\n                                                        this.elementos.push(\r\n                                                          { blockHash: event.blockHash,\r\n                                                            transactionHash: event.transactionHash,\r\n                                                            blockNumber:event.blockNumber,                                            \r\n                                                            amount: this.amount,\r\n                                                            rewardPoints: this.rewardPoints,\r\n                                                            totalRewardPoints: this.totalRewardPoints,\r\n                                                            accountAddress: event.returnValues.to\r\n                                                          }\r\n                                                        );\r\n  \r\n                                                        this.elementos = this.elementos.sort((a: any, b: any) => parseInt(a.blockNumber) - parseInt(b.blockNumber));\r\n\r\n                                                      //recuperando data de los puntos intercambiados\r\n                                                      //datos recuperados: exchangedRewardPoints\r\n                                                      }else if(decodedData.name == 'exchangePoints') {\r\n                                                        this.exchangedRewardPoints = decodedData.params[1].value;\r\n                                                        this.totalRewardPoints = decodedData.params[2].value;\r\n\r\n                                                        this.elementosClient.push(\r\n                                                          { blockHash: event.blockHash,\r\n                                                            transactionHash: event.transactionHash,\r\n                                                            blockNumber:event.blockNumber,                                            \r\n                                                            exchangedRewardPoints: this.exchangedRewardPoints,\r\n                                                            totalRewardPoints: this.totalRewardPoints,\r\n                                                            accountAddress: event.returnValues.from\r\n                                                          }\r\n                                                        );\r\n  \r\n                                                        this.elementosClient = this.elementosClient.sort((a: any, b: any) => parseInt(a.blockNumber) - parseInt(b.blockNumber));\r\n\r\n                                                      }else {\r\n\r\n                                                      }\r\n                                                      \r\n                                                    }\r\n\r\n                                                  });\r\n                                                  \r\n                                                // }, 500);                                                                                                \r\n                                              }                                              \r\n                                            });\r\n  }\r\n\r\n  scrollToBottom() {\r\n    this.scrollContainer.scroll({\r\n      top: this.scrollContainer.scrollHeight,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}