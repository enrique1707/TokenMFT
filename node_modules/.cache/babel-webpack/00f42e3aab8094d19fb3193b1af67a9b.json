{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/EnriqueSalazar/Desktop/Dapp-Enrique/fcctoken/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst BaseFilter = require('./base-filter');\n\nconst getBlocksForRange = require('./getBlocksForRange');\n\nconst {\n  incrementHexInt\n} = require('./hexUtils');\n\nclass TxFilter extends BaseFilter {\n  constructor({\n    provider\n  }) {\n    super();\n    this.type = 'tx';\n    this.provider = provider;\n  }\n\n  update({\n    oldBlock\n  }) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const toBlock = oldBlock;\n      const fromBlock = incrementHexInt(oldBlock);\n      const blocks = yield getBlocksForRange({\n        provider: _this.provider,\n        fromBlock,\n        toBlock\n      });\n      const blockTxHashes = [];\n\n      for (const block of blocks) {\n        blockTxHashes.push(...block.transactions);\n      } // add to results\n\n\n      _this.addResults(blockTxHashes);\n    })();\n  }\n\n}\n\nmodule.exports = TxFilter;","map":{"version":3,"sources":["C:/Users/EnriqueSalazar/Desktop/Dapp-Enrique/fcctoken/node_modules/eth-json-rpc-filters/tx-filter.js"],"names":["BaseFilter","require","getBlocksForRange","incrementHexInt","TxFilter","constructor","provider","type","update","oldBlock","toBlock","fromBlock","blocks","blockTxHashes","block","push","transactions","addResults","module","exports"],"mappings":";;AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,qBAAD,CAAjC;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAsBF,OAAO,CAAC,YAAD,CAAnC;;AAEA,MAAMG,QAAN,SAAuBJ,UAAvB,CAAkC;AAEhCK,EAAAA,WAAW,CAAE;AAAEC,IAAAA;AAAF,GAAF,EAAgB;AACzB;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKD,QAAL,GAAgBA,QAAhB;AACD;;AAEKE,EAAAA,MAAM,CAAE;AAAEC,IAAAA;AAAF,GAAF,EAAgB;AAAA;;AAAA;AAC1B,YAAMC,OAAO,GAAGD,QAAhB;AACA,YAAME,SAAS,GAAGR,eAAe,CAACM,QAAD,CAAjC;AACA,YAAMG,MAAM,SAASV,iBAAiB,CAAC;AAAEI,QAAAA,QAAQ,EAAE,KAAI,CAACA,QAAjB;AAA2BK,QAAAA,SAA3B;AAAsCD,QAAAA;AAAtC,OAAD,CAAtC;AACA,YAAMG,aAAa,GAAG,EAAtB;;AACA,WAAK,MAAMC,KAAX,IAAoBF,MAApB,EAA4B;AAC1BC,QAAAA,aAAa,CAACE,IAAd,CAAmB,GAAGD,KAAK,CAACE,YAA5B;AACD,OAPyB,CAQ1B;;;AACA,MAAA,KAAI,CAACC,UAAL,CAAgBJ,aAAhB;AAT0B;AAU3B;;AAlB+B;;AAsBlCK,MAAM,CAACC,OAAP,GAAiBf,QAAjB","sourcesContent":["const BaseFilter = require('./base-filter')\nconst getBlocksForRange = require('./getBlocksForRange')\nconst { incrementHexInt } = require('./hexUtils')\n\nclass TxFilter extends BaseFilter {\n\n  constructor ({ provider }) {\n    super()\n    this.type = 'tx'\n    this.provider = provider\n  }\n\n  async update ({ oldBlock }) {\n    const toBlock = oldBlock\n    const fromBlock = incrementHexInt(oldBlock)\n    const blocks = await getBlocksForRange({ provider: this.provider, fromBlock, toBlock })\n    const blockTxHashes = []\n    for (const block of blocks) {\n      blockTxHashes.push(...block.transactions)\n    }\n    // add to results\n    this.addResults(blockTxHashes)\n  }\n\n}\n\nmodule.exports = TxFilter\n"]},"metadata":{},"sourceType":"script"}